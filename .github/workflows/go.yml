name: Go

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read Version
        id: get-version
        run: |
          version=$(cat version.txt)
          echo "::set-output name=version::$version"
        shell: bash

  build_amd64:
    runs-on: ubuntu-latest
    needs: get-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.3'

      - name: Set GOOS and GOARCH for amd64
        run: |
          export GOOS=linux
          export GOARCH=amd64
        shell: bash

      - name: Build for amd64
        run: go build -o ./jeopardy_amd64
        working-directory: .

      - name: Test
        run: go test -v ./...

      - name: Upload Artifacts (amd64)
        uses: actions/upload-artifact@v3
        with:
          name: jeopardy_amd64
          path: ./jeopardy_amd64

  build_arm:
    runs-on: ubuntu-latest
    needs: get-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.3'

      - name: Set GOOS and GOARCH for ARM
        run: |
          export GOOS=linux
          export GOARCH=arm
        shell: bash

      - name: Build for ARM
        run: go build -o ./jeopardy_arm
        working-directory: .

      - name: Test
        run: go test -v ./...

      - name: Upload Artifacts (amd64)
        uses: actions/upload-artifact@v3
        with:
          name: jeopardy_arm
          path: ./jeopardy_arm

  create-tag:
    needs: get-version
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set Git user identity
        run: |
          git config user.email "{{ secrets.GITHUB_ACTOR }}@users.noreply.github.com"
          git config user.name "ItzCryptonized"
        shell: bash
      - name: Create Git Tag
        run: |
          version=${{ needs.get-version.outputs.version }}
          git tag -a v${version} -m "Version ${version}"
          git push origin v${version}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    needs: [build_amd64, build_arm, create-tag, get-version]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ./jeopardy_amd64
            ./jeopardy_arm
          tag_name: v${{ needs.get-version.outputs.version }}
          release_name: Release ${{ needs.get-version.outputs.version }}